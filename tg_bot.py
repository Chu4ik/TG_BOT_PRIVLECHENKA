import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand 
from config import TELEGRAM_TOKEN

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É–ª–æ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from db_operations.db import init_db_pool, close_db_pool 

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
from handlers import order_routers
from handlers.reports import order_confirmation_report

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s"
)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(storage=MemoryStorage())

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ä–æ—É—Ç–µ—Ä—ñ–≤ –∑ —Å–ø–∏—Å–∫—É order_routers
dp.include_routers(
    *order_routers
)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥ –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
async def set_main_menu_commands(bot: Bot):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é (–º–µ–Ω—é-–≥–∞–º–±—É—Ä–≥–µ—Ä–∞).
    """
    commands = [
        BotCommand(command="/start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        BotCommand(command="/new_order", description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑"),
        BotCommand(command="/my_orders", description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–∫–∞–∑—ã"),
        BotCommand(command="/show_unconfirmed_orders", description="–ü–æ–∫–∞–∑–∞—Ç—å draft –∑–∞–∫–∞–∑—ã"),
        # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–∏ —É –≤–∞—Å –µ—Å—Ç—å
    ]
    await bot.set_my_commands(commands)
    logging.info("–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞
async def main():
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    db_pool = None # –û–±—ä—è–≤–ª—è–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –î–û –∑–∞–ø—É—Å–∫–∞ polling
        logging.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db_pool = await init_db_pool() # <--- –°–û–•–†–ê–ù–Ø–ï–ú –í–û–ó–í–†–ê–©–ï–ù–ù–´–ô –ü–£–õ
        logging.info("–ü—É–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

        # –ü–µ—Ä–µ–¥–∞–µ–º –ø—É–ª –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        dp["db_pool"] = db_pool # <--- –î–û–ë–ê–í–õ–ï–ù–û: –ü–ï–†–ï–î–ê–ï–ú –ü–£–õ –í –ö–û–ù–¢–ï–ö–°–¢ –î–ò–°–ü–ï–¢–ß–ï–†–ê

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
        await set_main_menu_commands(bot) 

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—É–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—É–ª–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª—è–º–±–¥–∞-—Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å pool –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
        dp.shutdown.register(lambda: close_db_pool(db_pool)) # <--- –ò–ó–ú–ï–ù–ï–ù–û

        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    except asyncio.CancelledError:
        logging.warning("‚èπÔ∏è –ë–æ—Ç –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é (Ctrl+C)")
    except Exception as e:
        logging.exception(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logging.info("üßπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
        await bot.session.close()

