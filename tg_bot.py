# tg_bot/tg_bot.py

import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand 
from config import TELEGRAM_TOKEN
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties 

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É–ª–æ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from db_operations import init_db_pool, close_db_pool, get_employee_id

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
from handlers import order_routers
from handlers.reports import order_confirmation_report
from handlers.reports import my_orders_report
from handlers.reports import client_payments_report # <--- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —Ä–æ—É—Ç–µ—Ä –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s"
)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = Bot(
    token=TELEGRAM_TOKEN, 
    default=DefaultBotProperties(parse_mode=ParseMode.MARKDOWN_V2)
)

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(storage=MemoryStorage())

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ order_routers
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –≤–∞—à–∏ —Ä–æ—É—Ç–µ—Ä—ã –∑–¥–µ—Å—å —è–≤–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ order_routers
dp.include_routers(
    *order_routers,
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
async def set_main_menu_commands(bot: Bot):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é (–º–µ–Ω—é-–≥–∞–º–±—É—Ä–≥–µ—Ä–∞).
    """
    commands = [
        BotCommand(command="/start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        BotCommand(command="/new_order", description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑"),
        BotCommand(command="/my_orders", description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–∫–∞–∑—ã"),
        BotCommand(command="/show_unconfirmed_orders", description="–ü–æ–∫–∞–∑–∞—Ç—å draft –∑–∞–∫–∞–∑—ã"),
        BotCommand(command="/payments", description="üí∞ –û–ø–ª–∞—Ç—ã –∫–ª–∏–µ–Ω—Ç–æ–≤"),
        BotCommand(command="/financial_report_today", description="üìä –û—Ç—á–µ—Ç –æ–± –æ–ø–ª–∞—Ç–∞—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è"),
        BotCommand(command="/incoming_deliveries_today", description="üì¶ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è"),
        BotCommand(command="/supplier_payments_today", description="üí∏ –û–ø–ª–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º –∑–∞ —Å–µ–≥–æ–¥–Ω—è")
    ]
    await bot.set_my_commands(commands)
    logging.info("–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ö–û–†–†–ï–ö–¢–ù–û–ì–û –ó–ê–ö–†–´–¢–ò–Ø –ü–£–õ–ê –ë–î
async def on_shutdown_cleanup(dispatcher: Dispatcher):
    """
    –•—É–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—É–ª–∞ –ë–î.
    """
    logging.info("üßπ –í—ã–ø–æ–ª–Ω—è–µ–º cleanup –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã...")
    db_pool = dispatcher.get("db_pool") # –ü–æ–ª—É—á–∞–µ–º –ø—É–ª –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    if db_pool:
        await close_db_pool(db_pool) # <-- –í–û–¢ –ó–î–ï–°–¨ –ú–´ –ï–ì–û –î–û–ñ–ò–î–ê–ï–ú–°–Ø
        logging.info("–ü—É–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö asyncpg —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç.")
    else:
        logging.warning("–ü—É–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã.")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞
async def main():
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    db_pool = None # –û–±—ä—è–≤–ª—è–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –î–û –∑–∞–ø—É—Å–∫–∞ polling
        logging.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db_pool = await init_db_pool() # <--- –°–û–•–†–ê–ù–Ø–ï–ú –í–û–ó–í–†–ê–©–ï–ù–ù–´–ô –ü–£–õ
        logging.info("–ü—É–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

        # –ü–µ—Ä–µ–¥–∞–µ–º –ø—É–ª –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        dp["db_pool"] = db_pool # <--- –î–û–ë–ê–í–õ–ï–ù–û: –ü–ï–†–ï–î–ê–ï–ú –ü–£–õ –í –ö–û–ù–¢–ï–ö–°–¢ –î–ò–°–ü–ï–¢–ß–ï–†–ê

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
        await set_main_menu_commands(bot) 

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—É–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—É–ª–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞
        # !!! –ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–£ –°–¢–†–û–ö–£ !!!
        # –ë—ã–ª–æ: dp.shutdown.register(lambda: close_db_pool(db_pool))
        # –°—Ç–∞–ª–æ:
        dp.shutdown.register(on_shutdown_cleanup) # <--- –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú –ù–û–í–£–Æ –§–£–ù–ö–¶–ò–Æ

        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    except asyncio.CancelledError:
        logging.warning("‚èπÔ∏è –ë–æ—Ç –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é (Ctrl+C)")
    except Exception as e:
        logging.exception(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logging.info("üßπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
        await bot.session.close()