from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import date, timedelta

# –í—ã–±–æ—Ä –∞–¥—Ä–µ—Å–∞ (–µ—Å–ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ)
def get_address_keyboard(addresses):
    keyboard = InlineKeyboardMarkup(row_width=1)
    for addr in addresses:
        keyboard.add(InlineKeyboardButton(text=addr['address_text'], callback_data=f"address:{addr['id']}"))
    return keyboard

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
def confirm_product_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_product")],
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â—ë", callback_data="add_more_product")]
    ])

# –ò—Ç–æ–≥ –∑–∞–∫–∞–∑–∞ ‚Äî –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º
def order_actions_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì§ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="send_order")],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_order")],
        [InlineKeyboardButton(text="üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", callback_data="change_date")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel_order")]
    ])

# –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ 7 –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥
def delivery_date_keyboard(start_date: date): # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ start_date –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è
    buttons = []
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ 7 –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥
    for i in range(7):
        current_date = start_date + timedelta(days=i)
        buttons.append(
            InlineKeyboardButton(
                text=current_date.strftime("%d.%m"),
                callback_data=f"date:{current_date.isoformat()}"
            )
        )
    
    # –†–∞–∑–¥–µ–ª–∏–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    inline_keyboard_rows = []
    for i in range(0, len(buttons), 3):
        inline_keyboard_rows.append(buttons[i:i+3])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É"
    inline_keyboard_rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="back_to_cart_main_menu")])

    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–ñ–ï –ï–°–¢–¨: –ü–µ—Ä–µ–¥–∞–π—Ç–µ 'inline_keyboard' –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard_rows)


def build_cart_keyboard(cart_len: int) -> InlineKeyboardMarkup:
    rows = []
    if cart_len > 0:
        rows.append([InlineKeyboardButton(text="‚úè –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É", callback_data="edit_line")])
        rows.append([InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="confirm_order")])
    
    # "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏" –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Å–µ–≥–¥–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã
    rows.append([InlineKeyboardButton(text="üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="edit_delivery_date")])

    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, —Ç–æ –∫–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Ç–æ–≤–∞—Ä" –Ω–µ –Ω—É–∂–Ω–∞ –∑–¥–µ—Å—å, 
    # —Ç–∞–∫ –∫–∞–∫ show_cart_menu —Ç–µ–ø–µ—Ä—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É —Ç–æ–≤–∞—Ä–æ–≤.
    # –ï—Å–ª–∏ –∂–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –≤ –º–µ–Ω—é –∫–æ—Ä–∑–∏–Ω—ã (–¥–∞–∂–µ –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞,
    # –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –≤—ã—à–µ–ª –≤ –º–µ–Ω—é –∫–æ—Ä–∑–∏–Ω—ã), —Ç–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–µ. 
    # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É, —á—Ç–æ flow —Å–∞–º –ø–µ—Ä–µ–≤–æ–¥–∏—Ç.

    return InlineKeyboardMarkup(inline_keyboard=rows)